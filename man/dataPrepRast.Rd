% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataPrepRast.R
\docType{methods}
\name{dataPrepRast}
\alias{dataPrepRast}
\alias{dataPrepRast,RasterLayer,RasterLayer-method}
\alias{dataPrepRast,RasterLayer,SpatialPolygonsDataFrame-method}
\alias{dataPrepRast,RasterLayer,Extent-method}
\alias{dataPrepRast,RasterLayer,missing-method}
\title{Reproject, crop and mask a raster map}
\usage{
dataPrepRast(x, crop, ...)

\S4method{dataPrepRast}{RasterLayer,RasterLayer}(x, crop, mask = NULL,
  reprojectTo = NULL, outPath = NULL, filename = NULL, format = "GTiff",
  timings = FALSE, ...)

\S4method{dataPrepRast}{RasterLayer,SpatialPolygonsDataFrame}(x, crop, mask,
  reprojectTo, outPath = NULL, filename = NULL, format = "GTiff",
  timings = FALSE, ...)

\S4method{dataPrepRast}{RasterLayer,Extent}(x, crop, mask, reprojectTo,
  outPath = NULL, filename = NULL, format = "GTiff", timings = FALSE,
  ...)

\S4method{dataPrepRast}{RasterLayer,missing}(x, crop, mask, reprojectTo,
  outPath = NULL, filename = NULL, format = "GTiff", timings = FALSE,
  ...)
}
\arguments{
\item{x}{A \code{RasterLayer} object or the name of one.}

\item{crop}{Raster*, SpatialPolygons*, Extent* object from which an Extent can
be extracted (see Details of \code{\link[raster]{crop}}).}

\item{...}{Additional arguments to the aforementioned \code{raster} functions.}

\item{mask}{Raster* or SpatialPolygons* object passed to \code{\link[raster]{mask}}.}

\item{reprojectTo}{A character or object of class 'CRS' that is used to set the output projection.}

\item{outPath}{Path where filename is saved.}

\item{filename}{Output filename to write to (\code{\link[raster]{writeRaster}}).}

\item{format}{File format to write out (\code{\link[raster]{writeRaster}}).
If not specified, GTiff will be used.}

\item{timings}{Logical indicating whether Sys.time messages should be
suppressed. Default is \code{FALSE}.}
}
\value{
A \code{RasterLayer} object.
}
\description{
This script reprojects, crop and mask a raster using a Raster* object or a SpatialPolygon object.
}
\examples{
if (require(maptools)) {
  library(raster)
  library(maptools)
  data("wrld_simpl")

  # From scratch, random raster
  xy <- matrix(rnorm(2500), 50, 50)
  inputrast <- raster(xy)

  # Set Canada extent and projection
  extent(inputrast) <- c(-170, -15, 25, 100)
  projection(inputrast) <- CRS("+proj=longlat +datum=WGS84")

  # Extract Canada boundary from wrld_simpl
  canada <- wrld_simpl[which(wrld_simpl@data$NAME == 'Canada'),]

  # dataPrepRast
  x <- dataPrepRast(inputrast, crop = canada , mask = canada,
                    reprojectTo = inputrast, timings = TRUE)
}
}
